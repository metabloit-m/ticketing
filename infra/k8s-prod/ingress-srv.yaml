apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://metabloit.xyz"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Accept"
    # Add proxy settings to handle timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - metabloit.xyz
    secretName: metabloit-tls
  rules:
  - host: metabloit.xyz
    http:
      paths:
      - path: /api/payments/?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: payments-srv
            port:
              number: 3000
      - path: /api/users
        pathType: Prefix
        backend:
          service:
            name: auth-srv
            port:
              number: 3000
      - path: /api/tickets/?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: tickets-srv
            port:
              number: 3000
      - path: /api/orders/?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: orders-srv
            port:
              number: 3000
      - path: /?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: client-srv
            port:
              number: 3000
  ingressClassName: nginx
